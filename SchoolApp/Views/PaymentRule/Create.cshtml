@model SchoolApp.Models.PaymentRule

@{
bool isCurrent = ViewBag.IsCurrent;
}
@using (Ajax.BeginForm(
    "Create",
    "PaymentRule",
    new AjaxOptions
    {
        UpdateTargetId = "update-message",
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "Post",
        OnSuccess = "updateSuccess"
    },
    new { @id = "updatePaymentRuleForm" }))
{
    @Html.ValidationSummary(true)
    @Html.Hidden("isCurrent", isCurrent)
    <div id="update-message"></div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Rule)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Rule)
            @Html.ValidationMessageFor(model => model.Rule)
        </div>
    if (!ViewBag.IsCurrent)
    {
        <div class="editor-label">
            @Html.LabelFor(model => model.EffectiveDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EffectiveDate)
            @Html.ValidationMessageFor(model => model.EffectiveDate)
        </div>
}
        <div class="editor-label">
            @Html.LabelFor(model => model.Amount)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Amount)
            @Html.ValidationMessageFor(model => model.Amount)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Variable)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Variable)
            @Html.ValidationMessageFor(model => model.Variable)
        </div>
}
