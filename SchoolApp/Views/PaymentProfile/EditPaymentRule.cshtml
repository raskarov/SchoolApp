@model SchoolApp.Models.PaymentRule
@using (Ajax.BeginForm(
    "EditPaymentRule",
    "PaymentProfile",
    new AjaxOptions
    {
        UpdateTargetId = "update-message",
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "Post",
        OnSuccess = "updateSuccess"
    },
    new { @id = "updatePaymentRuleForm" }))
{
    @Html.ValidationSummary(true)
    <div id="update-message"></div>
    @Html.HiddenFor(model => model.PaymentRuleId)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.PaymentProfileId)
    <div class="editor-label">
        @Html.LabelFor(model => model.Rule)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Rule)
        @Html.ValidationMessageFor(model => model.Rule)
    </div>
    if (!ViewBag.IsCurrent) //Cannot change effective date for current payment
    {
    <div class="editor-label">
        @Html.LabelFor(model => model.EffectiveDate)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.EffectiveDate)
        @Html.ValidationMessageFor(model => model.EffectiveDate)
    </div>
    }
    else
    {
        @Html.HiddenFor(model=>model.EffectiveDate) //Need this
    }
    <div class="editor-label">
        @Html.LabelFor(model => model.Amount)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Amount)
        @Html.ValidationMessageFor(model => model.Amount)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Variable)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Variable)
        @Html.ValidationMessageFor(model => model.Variable)
    </div>
}
